{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAGpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACT,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAY,CAAET,SAAUA,EAAUC,MAAOA,GAC3CK,EACFH,EAAQM,GAERL,EAAOK,E,GAERR,E,IAZPL,EAAKc,SAASC,OAAOC,iBAAiB,SAgBtC,SAAuBC,GACrBA,EAAMC,iBAKN,IAJA,IAAMC,EAASnB,EAAKc,SAASK,OAAOC,cAChCC,EAAQrB,EAAKc,SAAST,MAAMe,cAC1BE,EAAOtB,EAAKc,SAASQ,KAAKF,cAEvBG,EAAW,EAAGA,GAAYJ,EAAQI,IACzCpB,EAAcoB,EAAUF,GACrBG,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,M,OACjBP,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAE9DwB,OAAM,SAAAJ,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBP,EAAA4B,OAAOI,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAG9DgB,GAAgBC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.elements.submit.addEventListener('click', submitHandler);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      const promisObj = { position: position, delay: delay };\n      if (shouldResolve) {\n        resolve(promisObj);\n      } else {\n        reject(promisObj);\n      }\n    }, delay);\n  });\n}\n\nfunction submitHandler(event) {\n  event.preventDefault();\n  const amount = form.elements.amount.valueAsNumber;\n  let delay = form.elements.delay.valueAsNumber;\n  const step = form.elements.step.valueAsNumber;\n\n  for (let position = 1; position <= amount; position++) {\n    createPromise(position, delay)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay = delay + step;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","promisObj","elements","submit","addEventListener","event","preventDefault","amount","valueAsNumber","delay1","step","position1","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.e6d7dfa1.js.map"}